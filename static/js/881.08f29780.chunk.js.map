{"version":3,"file":"static/js/881.08f29780.chunk.js","mappings":"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","sources":["components/Api-service/ApiService.js","webpack://react-homework-template/./src/components/GalleryItem/GalleryItem.module.css?5bd8","components/GalleryItem/GalleryItem.jsx","webpack://react-homework-template/./src/components/Gallery/Gallery.module.css?dbe6","components/Gallery/Gallery.jsx","webpack://react-homework-template/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.jsx"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '12697f9651cab9741ad5be8978340838';\n\nexport async function fetchTrendingMovies() {\n  return await fetch(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`).then(\n    res => {\n      if (!res.ok) Promise.reject(new Error('Opps...something going wrong'));\n      return res.json();\n    }\n  );\n}\n\nexport async function fetchById(id) {\n  return await fetch(`${BASE_URL}/movie/${id}?api_key=${API_KEY}`).then(res => {\n    if (!res.ok) Promise.reject(new Error('Opps...something going wrong'));\n    return res.json();\n  });\n}\n\nexport async function fetchByQuery(query) {\n  return await fetch(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&page=1`\n  ).then(res => {\n    if (!res.ok) Promise.reject(new Error('Opps...something going wrong'));\n    return res.json();\n  });\n}\n\nexport async function fetchCredits(id) {\n  return await fetch(`${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`).then(\n    res => {\n      if (!res.ok) Promise.reject(new Error('Opps...something going wrong'));\n      return res.json();\n    }\n  );\n}\n\nexport async function fetchReviews(id) {\n  return await fetch(`${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`).then(\n    res => {\n      if (!res.ok) Promise.reject(new Error('Opps...something going wrong'));\n      return res.json();\n    }\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"gallery__item\":\"GalleryItem_gallery__item__qM0sr\",\"gallery__image\":\"GalleryItem_gallery__image__CXT08\",\"item__title\":\"GalleryItem_item__title__HkyWk\",\"info\":\"GalleryItem_info__kHDot\",\"item__details\":\"GalleryItem_item__details__jKScA\"};","import { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport image from '../../images/image.jpg';\nimport css from './GalleryItem.module.css';\n\nconst GalleryItem = ({ rating, release, state, path, poster, title }) => {\n  const imageBaseUrl = 'https://image.tmdb.org/t/p/w300';\n  const releaseDate = new Date(`${release}`).toLocaleDateString({\n    day: 'numeric',\n    year: 'numeric',\n    month: 'long',\n  });\n  return (\n    <li className={css.gallery__item}>\n      <Link to={path} state={state}>\n        <article>\n          <div>\n            {poster ? (\n              <img\n                src={`${imageBaseUrl}${poster}`}\n                alt={title}\n                className={css.gallery__image}\n              />\n            ) : (\n              <img\n                src={`${image}`}\n                alt=\"Not found\"\n                className={css.gallery__image}\n              />\n            )}\n            <p className={css.item__title}>{title}</p>\n            <div className={css.info}>\n              <p>Rating: {rating}</p>\n              <p>Release: {releaseDate}</p>\n            </div>\n          </div>\n        </article>\n      </Link>\n    </li>\n  );\n};\n\nexport default GalleryItem;\n\n\nGalleryItem.propTypes = {\n  rating: PropTypes.string.isRequired,\n  release: PropTypes.string.isRequired,\n  state: PropTypes.object.isRequired,\n  path: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  poster: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"gallery\":\"Gallery_gallery__RNraJ\"};","import PropTypes from 'prop-types';\nimport GalleryItem from 'components/GalleryItem/GalleryItem';\nimport css from './Gallery.module.css';\n\nconst Gallery = ({ movies, state, path }) => {\n  const getRating = numb => Number(numb).toFixed(1);\n  return (\n    <ul className={css.gallery}>\n      {movies.map(\n        ({ vote_average, release_date, id, poster_path, title, overview }) => {\n          const rating = getRating(`${vote_average}`);\n          const release = `${release_date}`;\n          const pathToMovie = `${path}${id}`;\n          return (\n            <GalleryItem\n              key={id}\n              rating={rating}\n              release={release}\n              state={state}\n              path={pathToMovie}\n              poster={poster_path}\n              title={title}\n              overview={overview}\n            />\n          );\n        }\n      )}\n    </ul>\n  );\n};\n\nexport default Gallery;\n\nGallery.propTypes = {\n  movies: PropTypes.array.isRequired,\n  state: PropTypes.object.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"Movies_section__bjPDA\",\"form\":\"Movies_form__4ow+Z\",\"searchInput\":\"Movies_searchInput__8fq2n\",\"button\":\"Movies_button__GcIka\"};","import { useSearchParams, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { fetchByQuery } from 'components/Api-service/ApiService';\nimport { CgSearch } from 'react-icons/cg';\nimport { IconContext } from 'react-icons';\nimport Gallery from 'components/Gallery/Gallery';\nimport css from './Movies.module.css';\n\nconst Movies = () => {\n  const location = useLocation();\n  const [searchedMovies, setSearchedMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('searchQuery') ?? '';\n\n  useEffect(() => {\n    if (searchQuery === '') return;\n\n    async function fetchMovie() {\n      try {\n        await fetchByQuery(searchQuery).then(data =>\n          setSearchedMovies(data.results)\n        );\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetchMovie();\n  }, [searchQuery]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    setSearchParams({ searchQuery: form.elements.query.value.trim() });\n  };\n\n  return (\n    <div className={css.section}>\n      <form onSubmit={handleSubmit} className={css.form}>\n        <input\n          type=\"text\"\n          name=\"query\"\n          placeholder=\"Search movie\"\n          className={css.searchInput}\n        />\n        <IconContext.Provider\n          value={{\n            color: 'black',\n            size: '2em',\n            style: { verticalAlign: 'middle' },\n          }}\n        >\n          <button type=\"submit\" className={css.button}>\n            <CgSearch />\n          </button>\n        </IconContext.Provider>\n      </form>\n      {searchedMovies.length > 0 && (\n        <Gallery movies={searchedMovies} state={{ from: location }} path={''} />\n      )}\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["BASE_URL","API_KEY","fetchTrendingMovies","fetch","then","res","ok","Promise","reject","Error","json","fetchById","id","fetchByQuery","query","fetchCredits","fetchReviews","rating","release","state","path","poster","title","releaseDate","Date","toLocaleDateString","day","year","month","className","css","to","src","alt","image","movies","map","numb","vote_average","release_date","poster_path","overview","Number","toFixed","pathToMovie","location","useLocation","useState","searchedMovies","setSearchedMovies","useSearchParams","searchParams","setSearchParams","searchQuery","get","useEffect","data","results","console","log","fetchMovie","onSubmit","e","preventDefault","form","currentTarget","elements","value","trim","type","name","placeholder","color","size","style","verticalAlign","length","Gallery","from"],"sourceRoot":""}